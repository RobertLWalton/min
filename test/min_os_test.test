Start min_os Test
backtrace() returned 5 addresses
./min_os_test() [0x40369d]
./min_os_test() [0x40631a]
/lib64/libc.so.6(+0x295d0) [0x7fb8f8a295d0]
/lib64/libc.so.6(__libc_start_main+0x80) [0x7fb8f8a29680]
./min_os_test() [0x403535]

Start Parameter Test
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    parameter1 != NULL => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    parameter2 != NULL => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    parameter3 == NULL => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    strncmp ( parameter1, "123 ", 4 ) == 0 => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    strcmp ( parameter2, "3.21" ) == 0 => true
Finish Parameter Test


Start Memory Management Test
10 pages successfully allocated
100 pages successfully allocated
1000 pages successfully allocated
10000 pages successfully allocated
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_really_no_change() => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 200, P(0), 1000000 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(200), 0 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 700, P(300), 1000300 ) => true
300 pages successfully deallocated
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    test_address ( P(0) ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    ! test_address ( P(200) ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    ! test_address ( P(499) ) => true
250 pages successfully allocated
50 pages successfully allocated
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 200, P(0), 1000000 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 300, P(200), 0 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 500, P(500), 1000500 ) => true
100 pages successfully moved
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(0), 1000200 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(100), 1000100 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(200), 0 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 700, P(300), 1000300 ) => true
500 pages successfully moved
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 500, P(0), 1000100 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(500), 0 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 400, P(600), 1000600 ) => true
500 pages successfully moved
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(0), 0 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 500, P(100), 1000000 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 400, P(600), 1000600 ) => true
100 pages successfully made inaccessible
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(0), 1000000 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    ! test_address ( P(100) ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    ! test_address ( P(199) ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 800, P(200), 1000200 ) => true
100 pages successfully made accessible
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(0), 1000000 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 100, P(100), 0 ) => true
ASSERT SUCCEEDED: min_os_test.cc:XXXX:
    check_pages ( 800, P(200), 1000200 ) => true
new_pool will allocate at most 1 << 34 pages.
virtual memory has 68719476736 = 0x1000000000 pages.
Finish Memory Management Test


Start File Management Test
min_os_test.cc has 14610 bytes
No such file or directory
Finish File Management Test

Finish min_os Test
